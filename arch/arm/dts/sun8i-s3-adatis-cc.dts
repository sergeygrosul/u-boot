/*
 * Copyright (C) 2020 Aodzip <aodzip@gmail.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun8i-s3.dtsi"
#include "sunxi-common-regulators.dtsi"

/ {
    model = "Allwinner S3 Adatis Command Center";
    compatible = "allwinner,sun8i-s3",
                "allwinner,sun8i-v3s";

    aliases {
        serial0 = &uart1;
    };

    chosen {
        stdout-path = "serial0:115200n8";


/*        framebuffer-lcd0 {
            compatible = "allwinner,simple-framebuffer",
                     "simple-framebuffer";
            allwinner,pipeline = "de_be0-lcd0";
            clocks = <&ccu CLK_AHB_LCD0>, <&ccu CLK_AHB_DE_BE0>,
                 <&ccu CLK_DE_BE0>, <&ccu CLK_TCON0_CH0>,
                 <&ccu CLK_DRAM_DE_BE0>;
            status = "okay";
        };*/
    };

    backlight: backlight {
        compatible = "pwm-backlight";
        pwms = <&pwm 0 50000 0>;
        brightness-levels = <0 2 4 8 16 32 64 128 255>;
        default-brightness-level = <8>;
    };

    panel-rgb@0 {
        compatible = "simple-panel";
        backlight = <&backlight>;

        display-timings {
            timing@0 {
                clock-frequency = <33000000>;
                hactive = <800>;
                vactive = <480>;
                hfront-porch = <2>;
                hback-porch = <2>;
                hsync-len = <41>;
                vfront-porch = <2>;
                vback-porch = <2>;
                vsync-len = <10>;
                hsync-active = <0>;
                vsync-active = <0>;
                de-active = <0>;
                pixelclk-active = <1>;
            };
        };
    };
};

&emac {
    phy-handle = <&int_mii_phy>;
    phy-mode = "mii";
    allwinner,use-internal-phy;
    status = "okay";
};

&mmc0 {
    cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>; /* PF6 */
    bus-width = <4>;
    status = "okay";
};

&mmc2 {
    non-removable;
//    max-speed = <20000000>;
    bus-width = <4>;
    status = "okay";

    emmc: emmc@0 {
        reg = <0>;
        compatible = "mmc-card";
        broken-hpi;
    };    
};

&spi0 {
    status = "disabled";
};


&i2c0 {
    status = "okay";

    axp209: pmic@34 {
        reg = <0x34>;
        interrupt-parent = <&nmi_intc>;
        interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
    };
};

&pio {
    uart1_pins_g: uart1@0 {
        pins = "PG6", "PG7";
        function = "uart1";
        bias-pull-up;
    };

/*    test: st@0 {
        pins = "PE24", "PG8", "PG9", "PG0", "PG4", "PG5";
        function = "gpio_in";
        drive-strength = <20>;
        bias-pull-up;
    };

    stm32: st@1 {
        pins = "PB3";
        function = "gpio_out";
        drive-strength = <20>;
        bias-pull-down;
    };*/

};

#include "axp209.dtsi"

&reg_dcdc2 {
    regulator-always-on;
    regulator-min-microvolt = <1000000>;
    regulator-max-microvolt = <1100000>;
    regulator-name = "vdd-cpu";
};

&reg_dcdc3 {
    regulator-always-on;
    regulator-min-microvolt = <1000000>;
    regulator-max-microvolt = <3300000>;
    regulator-name = "vdd-int-dll";
};

&reg_ldo1 {
    regulator-always-on;
    regulator-min-microvolt = <1300000>;
    regulator-max-microvolt = <3300000>;
    regulator-name = "vdd-rtc";
};

&reg_ldo2 {
    regulator-always-on;
    regulator-min-microvolt = <3000000>;
    regulator-max-microvolt = <3000000>;
    regulator-name = "avcc";
};

&reg_ldo3 {
    regulator-min-microvolt = <1000000>;
    regulator-max-microvolt = <1200000>;
    regulator-name = "vddio-csi0";
    regulator-soft-start;
    regulator-ramp-delay = <1600>;
};

&reg_ldo4 {
    regulator-min-microvolt = <2800000>;
    regulator-max-microvolt = <2800000>;
    regulator-name = "vddio-csi1";
};



&uart1 {
    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&uart1_pins_g>; 
};

&usb_otg {
    pinctrl-names = "default";  
    dr_mode = "host";
    status = "okay";
};

&usbphy {
    status = "okay";
};

&ehci0 {
    status = "okay";
};

&ohci0 {
    status = "okay";
};

&pwm {
    status = "okay";
};



